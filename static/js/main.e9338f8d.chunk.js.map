{"version":3,"sources":["shared/navbar/navlink.tsx","shared/navbar/navitem.tsx","shared/navbar/navbar.tsx","home/home.tsx","app.tsx","index.tsx"],"names":["NavLink","title","referenceLink","href","NavItem","props","subLinks","navItems","map","idx","key","className","NavBar","data","contents","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2fAaaA,G,KAAkC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACvD,OAAO,uBAAGC,KAAMD,GAAgBD,KCQrBG,EAAkC,SAACC,GAE9C,GAAIA,EAAMC,SAAU,CAClB,IAAMC,EAAWF,EAAMC,SAASE,KAAI,SAACF,EAAUG,GAI3C,IAAMR,EAAQK,EAASL,MAAQK,EAASL,MAAQ,YAC1CC,EAAgBI,EAASJ,cAC3BI,EAASJ,cACT,GAEJ,OACE,kBAAC,EAAD,CAASD,MAAOA,EAAOC,cAAeA,EAAeQ,IAAKD,OAIhE,OACE,yBAAKE,UAAU,YACb,yBAAKA,UAAU,gBAAgBN,EAAMJ,OACrC,yBAAKU,UAAU,oBAAoBJ,IAKzC,OAAIF,EAAMH,cACD,kBAAC,EAAD,CAASD,MAAOI,EAAMJ,MAAOC,cAAeG,EAAMH,gBAGpD,kBAAC,EAAD,CAASD,MAAOI,EAAMJ,MAAOC,cAAc,M,OClCvCU,EAAmB,WAC9B,IACML,EADsBM,EAAKC,SACPN,KAAI,SAACM,EAAUL,GACvC,IAAMR,EAAQa,EAASb,MAAQa,EAASb,MAAQ,YAC1CC,EAAgBY,EAASZ,cAAgBY,EAASZ,cAAgB,GAGxE,OAAIY,EAASR,SACJ,kBAAC,EAAD,CAASL,MAAOA,EAAOK,SAAUQ,EAASR,SAAUI,IAAKD,IAGhE,kBAAC,EAAD,CAASR,MAAOa,EAASb,MAAOC,cAAeA,EAAeQ,IAAKD,OAIvE,OAAO,yBAAKE,UAAU,UAAUJ,IC3BrBQ,EAAiB,WAC5B,OACE,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,cACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,gBACb,sCAEE,6BACA,6BAHF,uBAKE,6BACA,6BANF,qCAQE,6BACA,6BATF,0BAWE,6BACA,6BAZF,oBAcE,6BACA,6BAfF,YCHKK,EAAgB,WAC3B,OACE,yBAAKL,UAAU,QACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCPNM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e9338f8d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface NavLinkProps {\r\n  title: string;\r\n  referenceLink: string;\r\n}\r\n/**\r\n * Creates refrence link for each navbar Item\r\n *\r\n * to update contents of Navbar update navcontents.json\r\n *\r\n * Propname changes to be updated in navcontents.json, navbar.tsx and navitem.tsx\r\n */\r\nexport const NavLink: React.FC<NavLinkProps> = ({ title, referenceLink }) => {\r\n  return <a href={referenceLink}>{title}</a>;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"./navlink\";\r\n\r\ninterface NavItemProps {\r\n  title: string;\r\n  subLinks?: SubLinks[];\r\n  referenceLink?: string;\r\n}\r\n\r\nexport interface SubLinks {\r\n  title?: string;\r\n  referenceLink?: string;\r\n}\r\n/**\r\n * builds individual components of Navbar to form dropdowns or links via\r\n * navlink.tsx\r\n *\r\n * to update contents of Navbar update navcontents.json\r\n *\r\n * Propname changes to be updated in navcontents.json, navbar.tsx and navlink.tsx\r\n */\r\nexport const NavItem: React.FC<NavItemProps> = (props) => {\r\n  //dropdown contents\r\n  if (props.subLinks) {\r\n    const navItems = props.subLinks.map((subLinks, idx) =>\r\n      // checks that both properties were properly set in navcontents.json\r\n      // defaults if props are not set\r\n      {\r\n        const title = subLinks.title ? subLinks.title : \"Undefined\";\r\n        const referenceLink = subLinks.referenceLink\r\n          ? subLinks.referenceLink\r\n          : \"\";\r\n\r\n        return (\r\n          <NavLink title={title} referenceLink={referenceLink} key={idx} />\r\n        );\r\n      }\r\n    );\r\n    return (\r\n      <div className=\"dropdown\">\r\n        <div className=\"dropdown-btn\">{props.title}</div>\r\n        <div className=\"dropdown-content\">{navItems}</div>\r\n      </div>\r\n    );\r\n  }\r\n  // single item\r\n  if (props.referenceLink) {\r\n    return <NavLink title={props.title} referenceLink={props.referenceLink} />;\r\n  }\r\n  // default if error in navcontent.json\r\n  return <NavLink title={props.title} referenceLink=\"\" />;\r\n};\r\n","import React from \"react\";\r\nimport { NavItem, SubLinks } from \"./navitem\";\r\nimport data from \"./navcontents.json\";\r\n\r\ninterface Content {\r\n  title: string;\r\n  subLinks?: SubLinks[];\r\n  referenceLink?: string;\r\n}\r\n\r\n/**\r\n * Builds object components for Navbar\r\n *\r\n * to update contents of Navbar update navcontents.json\r\n *\r\n * Propname changes to be updated in navcontents.json, navitem.tsx and navlink.tsx\r\n */\r\nexport const NavBar: React.FC = () => {\r\n  const contents: Content[] = data.contents;\r\n  const navItems = contents.map((contents, idx) => {\r\n    const title = contents.title ? contents.title : \"Undefined\";\r\n    const referenceLink = contents.referenceLink ? contents.referenceLink : \"\";\r\n\r\n    //if item has sublinks for dropdown\r\n    if (contents.subLinks) {\r\n      return <NavItem title={title} subLinks={contents.subLinks} key={idx} />;\r\n    }\r\n    return (\r\n      <NavItem title={contents.title} referenceLink={referenceLink} key={idx} />\r\n    );\r\n  });\r\n\r\n  return <div className=\"navbar\">{navItems}</div>;\r\n};\r\n","import React from \"react\";\r\n\r\n/** body component for site Home page\r\n *\r\n */\r\nexport const Main: React.FC = () => {\r\n  return (\r\n    <div className=\"Main-body\">\r\n      <div className=\"Main-left\"></div>\r\n      <div className=\"Main-right\"></div>\r\n      <div className=\"Main-content\">\r\n        <p>\r\n          top tier\r\n          <br />\r\n          <br />\r\n          10/10 would recommed\r\n          <br />\r\n          <br />\r\n          if i had a company that was hiring\r\n          <br />\r\n          <br />\r\n          no matter what position\r\n          <br />\r\n          <br />\r\n          yould get the job\r\n          <br />\r\n          <br />\r\n          -Nico\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { NavBar } from \"./shared/navbar/navbar\";\r\nimport { Main } from \"./home/home\";\r\n\r\n/** Main Component\r\n *\r\n */\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"Main-header\">\r\n        <NavBar />\r\n      </div>\r\n      <Main />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./style/styles.css\";\r\n\r\nimport { App } from \"./app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}