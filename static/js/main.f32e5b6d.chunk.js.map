{"version":3,"sources":["shared/navbar/navlink.tsx","shared/navbar/navitem.tsx","shared/navbar/navbar.tsx","main/main.tsx","index.tsx"],"names":["NavLink","title","referenceLink","href","NavItem","props","subLinks","navItems","map","idx","console","log","key","className","NavBar","data","contents","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ocAiBaA,G,KAAiC,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACnD,OACA,uBAAGC,KAAOD,GAAkBD,KCKnBG,EAAiC,SAACC,GAE3C,GAAGA,EAAMC,SAAS,CACd,IAAMC,EAAWF,EAAMC,SAASE,KAAI,SAACF,EAAUG,GAI3C,OADAC,QAAQC,IAAIL,GACTA,EAASL,OAASK,EAASJ,cAEtB,kBAAC,EAAD,CAASD,MAAQK,EAASL,MAAQC,cAAgBI,EAASJ,cAAgBU,IAAMH,IAKjF,kBAAC,EAAD,CAASR,MAAM,YAAYC,cAAc,GAAGU,IAAKH,OAM7D,OACI,yBAAKI,UAAU,YACX,4BAAQA,UAAU,gBAAgBR,EAAMJ,OACxC,yBAAKY,UAAU,oBACVN,IAMjB,OAAGF,EAAMH,cAED,kBAAC,EAAD,CAASD,MAAOI,EAAMJ,MAAOC,cAAeG,EAAMH,gBAKtD,kBAAC,EAAD,CAASD,MAAOI,EAAMJ,MAAOC,cAAc,M,OC1CtCY,EAAkB,WAC3B,IACMP,EADuBQ,EAAKC,SACRR,KAAI,SAACQ,EAAUP,GAGjC,GAAGO,EAASf,MAAM,CAEd,GAAGe,EAASV,SACR,OACI,kBAAC,EAAD,CAASL,MAAOe,EAASf,MAAOK,SAAYU,EAASV,SAAUM,IAAKH,IAG5E,GAAGO,EAASd,cACR,OACI,kBAAC,EAAD,CAASD,MAAOe,EAASf,MAAOC,cAAiBc,EAASd,cAAeU,IAAKH,IAK1F,OACI,kBAAC,EAAD,CAASR,MAAM,YAAYC,cAAc,GAAGU,IAAKH,OAM7D,OACI,yBAAKI,UAAU,UACVN,IC1CAU,EAAgB,WACzB,OAEI,yBAAKJ,UAAU,QACX,yBAAKA,UAAU,eACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,gBCH3BK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f32e5b6d.chunk.js","sourcesContent":["import React from 'react';\r\n/**\r\n * builds individual components of Navbar\r\n * \r\n * to update contents of Navbar update navcontents.json\r\n * \r\n * Propname changes to be updated in navcontents.json, navbar.tsx and navitem.tsx\r\n */\r\n\r\n\r\ninterface NavLinkProps  {\r\n    title: string;\r\n    referenceLink: string;\r\n\r\n}\r\n\r\n\r\nexport const NavLink:React.FC<NavLinkProps> = ({title, referenceLink}) => {\r\n    return (\r\n    <a href={ referenceLink }>{ title }</a>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { NavLink } from \"./navlink\";\r\n/**\r\n * builds individual components of Navbar to form dropdowns or links via\r\n * navlink.tsx\r\n * \r\n * to update contents of Navbar update navcontents.json\r\n * \r\n * Propname changes to be updated in navcontents.json, navbar.tsx and navlink.tsx\r\n */\r\n\r\ninterface NavItemProps {\r\n    title: string;\r\n    subLinks?: SubLinks[]; \r\n    referenceLink?: string;\r\n}\r\n\r\nexport interface SubLinks {\r\n    title?: string;\r\n    referenceLink?: string;\r\n}\r\n\r\n\r\nexport const NavItem:React.FC<NavItemProps> = (props) => {\r\n    //dropdown contents\r\n    if(props.subLinks){\r\n        const navItems = props.subLinks.map((subLinks, idx)=>\r\n        //checks that both properties were properly set in navcontents.json\r\n        {\r\n            console.log(subLinks);\r\n            if(subLinks.title && subLinks.referenceLink){\r\n                return(\r\n                    <NavLink title={ subLinks.title } referenceLink={ subLinks.referenceLink } key={ idx }/>\r\n                );\r\n            } else {\r\n                //passes default values if either were not properly set\r\n                return(\r\n                    <NavLink title=\"Undefined\" referenceLink=\"\" key={idx}  />\r\n                );\r\n            }\r\n        }\r\n       \r\n    );\r\n        return(\r\n            <div className=\"dropdown\">\r\n                <button className=\"dropdown-btn\">{props.title}</button>\r\n                <div className=\"dropdown-content\">\r\n                    {navItems}\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n    //single item\r\n    if(props.referenceLink){\r\n        return(\r\n            <NavLink title={props.title} referenceLink={props.referenceLink}/>\r\n        );\r\n    }\r\n    //default if error in navcontent.json\r\n    return(\r\n        <NavLink title={props.title} referenceLink=\"\"/>\r\n        );\r\n  \r\n}","import React from 'react';\r\nimport { NavItem, SubLinks } from \"./navitem\";\r\nimport data from './navcontents.json'\r\n\r\n/**\r\n * Builds object components for Navbar\r\n * \r\n * to update contents of Navbar update navcontents.json\r\n * \r\n * Propname changes to be updated in navcontents.json, navitem.tsx and navlink.tsx\r\n */\r\n\r\ninterface Content {\r\n    title: string;\r\n    subLinks?: SubLinks[]; \r\n    referenceLink?: string;\r\n}\r\n\r\n\r\nexport const NavBar:React.FC = () => {\r\n    const contents : Content[] = data.contents;\r\n    const navItems = contents.map((contents, idx)=>\r\n        {\r\n            //makes sure title was properly set in navcontents.json\r\n            if(contents.title){\r\n                //if item has sublinks for dropdown\r\n                if(contents.subLinks){\r\n                    return(\r\n                        <NavItem title={contents.title} subLinks = {contents.subLinks} key={idx}/>\r\n                    );\r\n                }\r\n                if(contents.referenceLink){\r\n                    return(\r\n                        <NavItem title={contents.title} referenceLink = {contents.referenceLink} key={idx}/>\r\n                    );\r\n                }\r\n            }\r\n            //default return if missing information to form proper item\r\n            return(\r\n                <NavItem title=\"Undefined\" referenceLink=\"\" key={idx}/>\r\n            );\r\n        }\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"navbar\"> \r\n            {navItems}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { NavBar } from '../shared/navbar/navbar';\r\n\r\n\r\nexport const Main:React.FC = () => {\r\n    return (\r\n\r\n        <div className=\"Main\">\r\n            <div className=\"Main-header\">\r\n              <NavBar />\r\n            </div> \r\n            <div className=\"Main-body\">\r\n\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/styles.css';\r\n\r\nimport { Main } from './main/main';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}